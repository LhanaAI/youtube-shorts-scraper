(()=>{const y=(()=>{const y=sessionStorage.getItem("bis_data");return null!==y?JSON.parse(y):null})(),G=y?.config?`${y.id}_t`:null,Z=y?.config?.aiMessagesConfig?.CHATGPT||{},{PARSERS:Q=[],CHATBOT_NAME:W=""}=Z,g=y=>{try{let Z={posdMessageId:"PANELOS_MESSAGE",posdHash:(Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)).substring(0,22),type:"CHATGPT_DATA",from:G,to:G.substring(0,G.length-2),content:y};window.postMessage(Z)}catch(y){}},z=function(y,G){let Z={chatbotName:W};for(let Q of G)Q.PATH?.length?Z[Q.NAME]=p.byPath(y,Q.PATH):Q.REDUCE_PARAMS&&(Z[Q.NAME]=p.byReduce(y,Q.REDUCE_PARAMS));return Z},c=function(y,G){let Z=y.messageText;"object"==typeof Z&&Z?.length&&(Z=Z.reduce(((y,G)=>"object"==typeof G?y:`${y} ${G}`),"")),y.messageText=Z.trim().slice(0,G),y.messageLength=y.messageText.length},A=async function(y,G,Z){const Q=G.body.getReader(),W=new TextDecoder("utf-8");let A="",p=[],K="";try{for(;;){const{done:y,value:G}=await Q.read();if(y)break;A+=W.decode(G,{stream:!0});let g=A.split("\n");for(let y=0;y<g.length;y++){const G=g[y].trim();if(G.startsWith("data:")&&Z.RECEIVED_MESSAGE.INVALID_VALUES_TO_PARSE.some((y=>!G.includes(y)))){const y=G.slice(5).trim();try{p.push(JSON.parse(y))}catch(y){}}}K||(K=A.match(new RegExp(Z.REGEXP_SESSION_ID_FROM_STREAM))?.groups?.sessionId),A=g[g.length-1]}}catch(y){}finally{!function(y,G,Z){if(y?.body?.length)try{let Q=JSON.parse(y.body),W=z(Q,Z.RULES_GET_USER_VALUES);if(c(W,Z.MESSAGE_LIMIT||1e4),!W||!W.messageText)return;W.sessionId||(W.sessionId=G),W.messageType="user",setTimeout((()=>g(W)),0)}catch(y){}}(y,K,Z.SENT_MESSAGE),function(y,G,Z){if(y?.length)try{let Q=z(y,Z.RULES_GET_SYSTEM_VALUES);if(!Q||!Q.messageText)return;Q.sessionId||(Q.sessionId=G),Q.messageType="system",c(Q,Z.MESSAGE_LIMIT||3e4),setTimeout((()=>g(Q)),0)}catch(y){}}(p,K,Z.RECEIVED_MESSAGE)}};ParserProcessors={XMLHttpRequest:function(y){const G=self.fetch;self.fetch=async function(Z,Q={}){const W="string"==typeof Z?Z:Z.url,g=Q.method||"GET";try{const Z=await G.apply(this,arguments),z=Z.clone();return Z.ok&&Z.body instanceof ReadableStream&&function(y,G,Z){return new RegExp(Z.REGEXP_URL_CHECK).test(y)&&G===Z.REQUEST_METHOD}(W,g,y)&&setTimeout(A.bind(this,Q,z,y),0),Z}catch(y){return G.apply(this,arguments)}}}};const p={byReduce:(y,G)=>{const{KEY:Z,CHECK_KEY:Q,CHECK_VALUE:W,TYPE:g,RED_FLAG_PATH:z,RED_FLAG_VALUE:c,ALT_PATHS_TO_TEXT:A,ALT_TYPE:K,INVALID_TEXT_VALUES:m,FINISH_VALUE:I}=G;if(z?.length)for(let G of y){let y=G;for(let G=0;G<z.length;G++){const Z=z[G];if(!y[Z]){y=null;break}y=y[Z]}if(y===c)return null}return y.reduce(((y,G,z,c)=>{if(!G.hasOwnProperty(Z))return y;if(G[Z]===I)return c.splice(z),y;if(typeof G[Z]===g)y+=G[Z];else if(typeof G[Z]===K&&!Array.isArray(G[Z]))for(let Q of A){let W=p.byPath(G[Z],Q);if(W===I){c.splice(z);break}W&&!m.includes(W)&&(y+=typeof W===g?W:W?.join(""))}if(Array.isArray(G[Z]))for(let A of G[Z]){if(A[Z]===I){c.splice(z);break}A[Q]===W&&A[Z]&&typeof A[Z]===g&&(y+=A[Z])}return y}),"")},byPath:(y,G)=>{for(let Z=0;Z<G.length;Z++){const Q=G[Z];if(!y[Q]){y=null;break}y=y[Q]}return y}};!function(){for(let y of Q)y.USE&&ParserProcessors[y.TYPE](y)}()})();